#------------------------------------------------------------
FROM base-centos-7.9:latest as builder-base
RUN yum install -y passwd sudo man tig tmux openssh-server \
    yum-utils autoconf rpm-build redhat-rpm-config \
    iptables iptables-services ipset bridge-utils traceroute 
RUN yum install -y zlib libffi libtool python-devel libpng-devel \
    libjpeg-devel openssl-devel mysql-devel 
RUN yum install -y supervisor NetworkManager python-setuptools 
RUN yum install -y zlib-devel libffi-devel bzip2-devel sqlite-devel \
    readline-devel tk-devel 
RUN yum install -y perl-ExtUtils-MakeMaker ncurses-devel curl-devel \
    expat-devel gettext-devel kernel-devel kernel-debug-devel 
RUN yum clean all

#------------------------------------------------------------
FROM builder-base as builder-ovs
RUN yum install -y openssl11-libs libibverbs unbound unbound-devel graphviz 
RUN yum install -y python3-devel python3-sphinx
RUN yum install -y kernel-debug-devel libtool python-twisted-core 
RUN yum install -y python-zope-interface PyQt4 desktop-file-utils libcap-ng-devel groff 
RUN yum install -y checkpolicy selinux-policy-devel sphinx-build-3

COPY lib/src/openvswitch-2.13.0.tar.gz ${HOME_DIR}/rpmbuild/SOURCES/
RUN set -eux; \
    cd ${HOME_DIR}/rpmbuild/SOURCES \
    && tar -xzf openvswitch-*.tar.gz \
    && rpmbuild -bb --nocheck openvswitch-2.13.0/rhel/openvswitch-fedora.spec 

#------------------------------------------------------------
FROM builder-base as builder-openssl
COPY lib/src/openssl-1.1.1w.tar.gz /tmp/
RUN cd /tmp/ \
    && tar -xzf openssl-1.1.1w.tar.gz \
    && cd openssl-1.1.1w  \
    && ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl -fPIC -shared \
    && make \
    && make install_sw install_ssldirs \
    && rm -rf /tmp/openssl-*
RUN ln -sf /usr/local/openssl/bin/openssl /usr/bin/openssl \
    && ln -s /usr/local/openssl/lib/libssl.so.1.1  /usr/lib64/libssl.so.1.1 \
    && ln -s /usr/local/openssl/lib/libssl.so.1.1  /usr/lib/libssl.so.1.1 \
    && ln -s /usr/local/openssl/lib/libcrypto.so.1.1  /usr/lib64/libcrypto.so.1.1 \
    && ln -s /usr/local/openssl/lib/libcrypto.so.1.1  /usr/lib/libcrypto.so.1.1 

#------------------------------------------------------------
FROM builder-openssl as builder-python3.12
COPY lib/src/Python-3.12.0.tgz /tmp/
RUN cd /tmp/ \
    && tar -xzf Python-3.12.0.tgz \
    && cd Python-3.12.0 \
    && ./configure --prefix=/usr/local/python3.12 --with-openssl=/usr/local/openssl \
    --with-openssl-rpath=auto \
    && make \
    && make install \
    && rm -rf /tmp/Python-*

FROM builder-openssl as builder-python3.7
COPY lib/src/Python-3.7.8.tgz /tmp/
RUN cd /tmp/ \
    && tar -xzf Python-3.7.8.tgz \
    && cd Python-3.7.8 \
    && ./configure --prefix=/usr/local/python3.7 --with-openssl=/usr/local/openssl \
    --with-openssl-rpath=auto \
    && make \
    && make install \
    && rm -rf /tmp/Python-*

# COPY lib/src/Python-3.8.12.tgz /tmp/
# RUN cd /tmp/ \
#     && tar -xzf Python-3.8.12.tgz \
#     && cd Python-3.8.12 \
#     && ./configure --prefix=/usr/local/python3.8 --with-openssl=/usr/local/openssl \
#     --with-openssl-rpath=auto \
#     && make \
#     && make install \
#     && rm -rf /tmp/Python-*

#------------------------------------------------------------
FROM builder-base as builder-git
COPY lib/src/git-2.30.0.tar.gz /tmp/
RUN set -eux; \
    rm /usr/bin/git \
    && cd /tmp \
    && tar -zxf git-2.30.0.tar.gz \
    && cd git-2.30.0 \
    && make configure \
    && ./configure --prefix=/usr/local/git \
    && make all \
    && make install \
    && rm -rf /tmp/git-*

#------------------------------------------------------------
FROM builder-base as builder-zsh
COPY lib/src/zsh-5.8.tar.xz /tmp/
RUN cd /tmp \
    && tar -xf zsh-5.8.tar.xz \
    && cd zsh-5.8 \
    && ./configure --prefix=/usr/local/zsh --without-tcsetpgrp \
    && make \
    && make install \
    && rm -rf /tmp/zsh-* 

#------------------------------------------------------------
FROM builder-base as builder-go
RUN go install golang.org/x/tools/gopls@v0.15.3 
RUN go install github.com/go-delve/delve/cmd/dlv@v1.22.1 
RUN go install honnef.co/go/tools/cmd/staticcheck@v0.4.7 

#------------------------------------------------------------ 
FROM builder-base as builder-vscode
# 安装vscode
# 对应以下版本：
#   版本: 1.85.2 (system setup)
#   提交: 8b3775030ed1a69b13e4f4c628c612102e30a681
#   日期: 2024-01-18T06:40:10.514Z
ENV VSCODE_ID=8b3775030ed1a69b13e4f4c628c612102e30a681
ENV VSCODE_BIN_DIR=${HOME_DIR}/.vscode-server/bin/${VSCODE_ID}
ENV VSCODE_BIN=${VSCODE_BIN_DIR}/bin/code-server
COPY lib/vscode/vscode-server-* /tmp/vscode/
COPY lib/vscode/ext/ lib/vscode/install.sh /tmp/vscode/
RUN mkdir -p ${VSCODE_BIN_DIR} \
    && tar -xzf /tmp/vscode/vscode-server-linux-x64-1.85.2.tar.gz -C ${VSCODE_BIN_DIR} --strip 1 \
    && cd /tmp/vscode/ \
    # 传入 code-server 执行文件的路径，在脚本里遍历安装扩展文件
    # ~/.vscode-server/bin/8b3775030ed1a69b13e4f4c628c612102e30a681/bin/code-server 
    && ./install.sh ${VSCODE_BIN} 

#------------------------------------------------------------
FROM builder-base

# RUN yum install -y --disablerepo="*" --enablerepo="base,extras,epel" iftop conntrack 
RUN yum install -y python3 iftop conntrack 

RUN yum install -y libibverbs unbound 
COPY --from=builder-ovs ${HOME_DIR}/rpmbuild/ ${HOME_DIR}/rpmbuild/
RUN set -eux; \
    yum localinstall -y ${HOME_DIR}/rpmbuild/RPMS/x86_64/openvswitch-2.13.0-*.rpm \
    && rm -rf ${HOME_DIR}/rpmbuild

COPY --from=builder-openssl /usr/local/openssl /usr/local/openssl
RUN ln -sf /usr/local/openssl/bin/openssl /usr/bin/openssl \
    && ln -s /usr/local/openssl/lib/libssl.so.1.1  /usr/lib64/libssl.so.1.1 \
    && ln -s /usr/local/openssl/lib/libssl.so.1.1  /usr/lib/libssl.so.1.1 \
    && ln -s /usr/local/openssl/lib/libcrypto.so.1.1  /usr/lib64/libcrypto.so.1.1 \
    && ln -s /usr/local/openssl/lib/libcrypto.so.1.1  /usr/lib/libcrypto.so.1.1 

COPY --from=builder-python3.12 /usr/local/python3.12/ /usr/local/python3.12/
RUN ln -s /usr/local/python3.12/bin/python3.12 /usr/bin/python3.12 \
    && ln -s /usr/local/python3.12/bin/pip3.12 /usr/bin/pip3.12

COPY --from=builder-git /usr/local/git /usr/local/git
RUN rm -rf /usr/bin/git \
    && ln -sf /usr/local/git/bin/git /usr/bin/git
ENV PATH=$PATH:/usr/local/git/bin

COPY --from=builder-zsh /usr/local/zsh /usr/local/zsh 
RUN ln -s /usr/local/zsh/bin/zsh /bin/zsh \
    && echo "/bin/zsh" >> /etc/shells
# 安装 oh my zsh 
COPY lib/zsh/ohmyzsh-master.zip /tmp/
RUN cd /tmp \
    && unzip -q ohmyzsh-master.zip \
    && mv ohmyzsh-master ${HOME_DIR}/.oh-my-zsh \
    && cp ${HOME_DIR}/.oh-my-zsh/templates/zshrc.zsh-template ${HOME_DIR}/.zshrc \
    && rm -rf /tmp/ohmyzsh-*

COPY --from=builder-go ${HOME_DIR}/go/ ${HOME_DIR}/go/

COPY --from=builder-vscode ${HOME_DIR}/.vscode-server/ ${HOME_DIR}/.vscode-server/
COPY lib/vscode/ /tmp/vscode/

COPY --from=builder-python3.7 /usr/local/python3.7/ /usr/local/python3.7/
RUN ln -s /usr/local/python3.7/bin/python3.7 /usr/bin/python3.7 \
    && ln -s /usr/local/python3.7/bin/pip3.7 /usr/bin/pip3.7

# COPY --from=builder-python /usr/local/python3.8/ /usr/local/python3.8/
# RUN ln -s /usr/local/python3.8/bin/python3.8 /usr/bin/python3.8 \
#     && ln -s /usr/local/python3.8/bin/pip3.8 /usr/bin/pip3.8

############################################################
# configs
############################################################

ENV SHARE_DIR=/wine/devbox/share

# zsh config
# 自动补全
ENV ZSH_CUSTOM=${HOME_DIR}/.oh-my-zsh/custom
COPY lib/zsh/incr-0.2.zsh ${ZSH_CUSTOM}/plugins/incr/incr.zsh
# zshr配置
RUN echo >> ${HOME_DIR}/.zshrc \
    && echo "source ${SHARE_DIR}/rc/ext.zshrc" >> ${HOME_DIR}/.zshrc \
    && sed -i "s/robbyrussell/ys/" ${HOME_DIR}/.zshrc 
# 切换shell
RUN chsh -s $(which zsh) 

# git config
COPY lib/conf/.gitconfig /${HOME_DIR}/.gitconfig
# pip config
COPY lib/conf/pip.conf ${HOME_DIR}/.pip/pip.conf
# tmux
COPY lib/conf/tmux.conf ${HOME_DIR}/.tmux.conf
# docker proxy
# COPY lib/docker/daemon.json /etc/docker/
# COPY docker/docker.service.lib /usr/lib/systemd/system/docker.service
# /usr/lib/systemd/system/docker.service

# 配置ssh 
RUN sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config
RUN sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
EXPOSE 22   
COPY lib/conf/ssh/*.pub /tmp/ssh/
RUN mkdir -p ${HOME_DIR}/.ssh \
    && cat /tmp/ssh/*.pub > ${HOME_DIR}/.ssh/authorized_keys
RUN echo r123 | passwd --stdin root

WORKDIR ${SHARE_DIR}/devc

# CMD ["/bin/bash"]
CMD ["/bin/zsh"]
# CMD ["/usr/sbin/init"]
